<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
         
    <modelVersion>4.0.0</modelVersion>

  	<groupId>com.desafio.projeto</groupId>
  	<artifactId>desafio-projeto</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
  	<packaging>war</packaging>

  	<dependencies>
		  
    	<!-- Servlet -->
		<dependency>
		    <groupId>jakarta.servlet</groupId>
		    <artifactId>jakarta.servlet-api</artifactId>
		    <version>6.1.0-M2</version>
		    <scope>provided</scope>
		</dependency>
    	
    	<!-- org.json -->
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20240303</version>
		</dependency>
		
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.8.8</version>
		</dependency>
		
		<!-- JUnit -->
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.13.2</version>
		    <scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-api</artifactId>
		    <version>5.10.2</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- Base de Dados -->
		<dependency>
		    <groupId>org.apache.derby</groupId>
		    <artifactId>derby</artifactId>
		    <version>10.14.2.0</version> 
		</dependency>

  	</dependencies>
    
    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <docker.image.name>desafio-imagem</docker.image.name>
        <docker.image.tag>latest</docker.image.tag>
        <dockerfile-maven-plugin.version>1.4.9</dockerfile-maven-plugin.version>
        <tomcat.plugin.version>2.2</tomcat.plugin.version>
    </properties>
    
    <build>
        <finalName>desafio</finalName>
        <plugins>
            <!-- Plugin do Maven para compilar o código Java -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <!-- Plugin do Maven para empacotar a aplicação em um arquivo WAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <!-- Plugin do Dockerfile para construir a imagem Docker -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                            <goal>tag</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <repository>${docker.image.name}</repository>
                    <tag>${docker.image.tag}</tag>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.war</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
            <!-- Plugin do Tomcat para executar a aplicação durante o desenvolvimento -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${tomcat.plugin.version}</version>
                <configuration>
                    <port>8080</port>
                    <path>/</path>
                </configuration>
            </plugin>
            
        </plugins>
    </build>
</project>
